{
	"info": {
		"_postman_id": "a4e0d26c-5780-4c19-b20f-4458a491f408",
		"name": "Scriptorium",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39316586"
	},
	"item": [
		{
			"name": "Admin",
			"item": [
				{
					"name": "Admin Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"securePassword123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/admin/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"admin",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Logout",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/admin/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"admin",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "register_email_approval",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"new33_admin@example.com\",\n  \"password\": \"yourSecurePassword123\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/admin/register_email_approval",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"admin",
								"register_email_approval"
							]
						}
					},
					"response": []
				},
				{
					"name": "Hide Replies (ADMIN)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contentId\": \"1\", \n    \"type\": \"reply\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/admin/hideContent",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"admin",
								"hideContent"
							]
						}
					},
					"response": []
				},
				{
					"name": "Hide Comment (ADMIN)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contentId\": \"1\", \n    \"type\": \"comment\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/admin/hideContent",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"admin",
								"hideContent"
							]
						},
						"description": "This endpoint is used to hide a specific comment.\n\n**Request Body**\n\n- `contentId` (string) - The ID of the content to be hidden.\n    \n- `type` (string) - The type of content to be hidden."
					},
					"response": []
				},
				{
					"name": "Hide Blog (ADMIN)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contentId\": \"1\", \n    \"type\": \"blog\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/admin/hideContent",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"admin",
								"hideContent"
							]
						},
						"description": "This endpoint allows administrators to hide a specific blog. The request should include a raw request body with the following parameters:\n\n- `contentId` (string): The ID of the content to be hidden.\n    \n- `type` (string): The type of the content to be hidden."
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "user register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"email\": \"user1@mail.com\",\"username\": \"user1\", \"password\": \"12345\", \"firstName\": \"user\", \"lastName\": \"name\", \"phoneNumber\": \"1234567890\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/users/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "user login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Store Bearer token in environment\", function () {",
									"    const response = pm.response.json();",
									"    const token = response.accessToken;",
									"    pm.environment.set(\"authToken\", token);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"user1\",\n    \"password\": \"12345\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "user logout",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/users/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"users",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"updatedUser\",\n    \"lastName\": \"updatedLastName\",\n    \"phoneNumber\": \"1231231234\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/users/updateProfile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"users",
								"updateProfile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Avatar",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"avatar\": \"/avatars/avatar1.png\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/users/updateAvatar",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"users",
								"updateAvatar"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Profile Photo",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "profilePhoto",
									"contentType": "File",
									"type": "file",
									"src": "postman-cloud:///1ef998d0-13e1-48e0-b60b-577670fe4879"
								}
							]
						},
						"url": {
							"raw": "http://localhost:4000/api/users/updateProfilePhoto",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"users",
								"updateProfilePhoto"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Refresh Token generate New Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Store NEW Bearer token in environment\", function () {",
									"    const response = pm.response.json();",
									"    const token = response.accessToken;",
									"    pm.environment.set(\"authToken\", token);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/auth/refresh",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Blog",
			"item": [
				{
					"name": "Create Blog",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"my blog\",\n    \"description\": \"this is my first blog :)\", \n    \"tags\": \"[\\\"Python\\\"]\",  \n    \"codeTemplateIds\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/Blogs/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"Blogs",
								""
							]
						},
						"description": "Create Blog"
					},
					"response": []
				},
				{
					"name": "Create Blog with Code Template Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"my blog\",\n    \"description\": \"this is my first blog :)\", \n    \"tags\": \"[\\\"Python\\\"]\",  \n    \"codeTemplateIds\": [1]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/Blogs/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"Blogs",
								""
							]
						},
						"description": "Create Blog"
					},
					"response": []
				},
				{
					"name": "Update Blog",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Blog Title!\",\n    \"description\": \"updated description of my blog!!\",\n    \"tags\": \"[\\\"python\\\"]\",\n    \"codeTemplateIds\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/Blogs/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"Blogs",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete blogs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/Blogs/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"Blogs",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get blogs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/Blogs/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"Blogs",
								""
							],
							"query": [
								{
									"key": "bid",
									"value": "2",
									"disabled": true
								},
								{
									"key": "title",
									"value": "my blog",
									"disabled": true
								},
								{
									"key": "description",
									"value": "this",
									"disabled": true
								},
								{
									"key": "tags",
									"value": "[\"python\"]",
									"disabled": true
								},
								{
									"key": "uid",
									"value": "1",
									"disabled": true
								},
								{
									"key": "codeTemplateIds",
									"value": "[\"1\"]",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"disabled": true
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "(ADMIN) Sort Blogs by Number of Reports",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/Blogs/sortByReports",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"Blogs",
								"sortByReports"
							],
							"query": [
								{
									"key": "bid",
									"value": "2",
									"disabled": true
								},
								{
									"key": "title",
									"value": "my blog",
									"disabled": true
								},
								{
									"key": "description",
									"value": "this",
									"disabled": true
								},
								{
									"key": "tags",
									"value": "[\"python\"]",
									"disabled": true
								},
								{
									"key": "uid",
									"value": "1",
									"disabled": true
								},
								{
									"key": "codeTemplateIds",
									"value": "[\"1\"]",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create/update Ratings for Blogs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"upvote\": true,\n    \"downvote\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/Blogs/1/rate",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"Blogs",
								"1",
								"rate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Blogs sorted by ratings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/Blogs/sortByRatings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"Blogs",
								"sortByRatings"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Code Templates",
			"item": [
				{
					"name": "Create Code Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if the response status is 200 OK",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"my python code\",\n    \"explanation\": \"this is my code :)\", \n    \"language\" : \"Python\",\n    \"tags\": \"[\\\"Python\\\"]\",\n    \"code\": \"for i in range(5): print(i * i)\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/CodeTemplates/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"CodeTemplates",
								""
							]
						},
						"description": "Create Code Template"
					},
					"response": []
				},
				{
					"name": "Get Code Templates",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/CodeTemplates/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"CodeTemplates",
								""
							],
							"query": [
								{
									"key": "cid",
									"value": "1",
									"disabled": true
								},
								{
									"key": "title",
									"value": "python",
									"disabled": true
								},
								{
									"key": "language",
									"value": "python",
									"disabled": true
								},
								{
									"key": "tags",
									"value": "[\"python\"]",
									"disabled": true
								},
								{
									"key": "code",
									"value": "",
									"disabled": true
								},
								{
									"key": "uid",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get curr users templates",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/CodeTemplates/currUsersTemplates",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"CodeTemplates",
								"currUsersTemplates"
							],
							"query": [
								{
									"key": "id",
									"value": "1",
									"disabled": true
								},
								{
									"key": "title",
									"value": "python",
									"disabled": true
								},
								{
									"key": "language",
									"value": "python",
									"disabled": true
								},
								{
									"key": "tags",
									"value": "[\"python\"]",
									"disabled": true
								},
								{
									"key": "code",
									"value": "for",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a code template",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/CodeTemplates/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"CodeTemplates",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Code Templates",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated code template!!\",\n    \"explanation\": \"i just updated my explanation of my code template!\",\n    \"code\": \"#include <stdio.h>\\nint main() { printf(\\\"Hello from C\\\\n\\\"); return 0; }\",\n    \"tags\": \"[\\\"Python\\\"]\",\n    \"language\": \"C\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/CodeTemplates/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"CodeTemplates",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Code Template",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/CodeTemplates/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"CodeTemplates",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fork Code Template",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cid\": \"1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/CodeTemplates/fork",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"CodeTemplates",
								"fork"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Create Comment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bid\": \"2\",\n    \"content\": \"yay fun comment!!!\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/comments/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"comments",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Comments",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/comments/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"comments",
								""
							],
							"query": [
								{
									"key": "bid",
									"value": "1",
									"disabled": true
								},
								{
									"key": "uid",
									"value": "1",
									"disabled": true
								},
								{
									"key": "commentId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Rating for comments",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"upvote\": true,\n    \"downvote\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/comments/2/rate",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"comments",
								"2",
								"rate"
							]
						}
					},
					"response": []
				},
				{
					"name": "update comment",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"new comment content!!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/comments/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete comment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/comments/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "(ADMIN) Sort comments by Number of Reports",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/comments/sortByReports",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"comments",
								"sortByReports"
							],
							"query": [
								{
									"key": "bid",
									"value": "2",
									"disabled": true
								},
								{
									"key": "uid",
									"value": "my blog",
									"disabled": true
								},
								{
									"key": "commentId",
									"value": "this",
									"disabled": true
								},
								{
									"key": "uid",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create/update ratings for comments",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"upvote\": true,\n    \"downvote\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/comments/2/rate",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"comments",
								"2",
								"rate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Comments sorted by ratings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/comments/sortByRatings?bid=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"comments",
								"sortByRatings"
							],
							"query": [
								{
									"key": "bid",
									"value": "1"
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Replies",
			"item": [
				{
					"name": "Create a reply",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"commentId\": \"1\",\n    \"content\": \"I don't agree with your comment.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/replies/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"replies",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get replies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/replies/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"replies",
								""
							],
							"query": [
								{
									"key": "ownerId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "replierId",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update reply",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"newReplyContent\": \"I agree with your comment\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/replies/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"replies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete a reply",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/replies/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"replies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "(ADMIN) Sort replies by Number of Reports",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/replies/sortByReports",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"replies",
								"sortByReports"
							],
							"query": [
								{
									"key": "ownerId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "replierId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "commentId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create/update ratings for replies",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"upvote\": true,\n    \"downvote\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/replies/1/rate",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"replies",
								"1",
								"rate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Replies sorted by ratings",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/replies/sortByRatings?commentId=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"replies",
								"sortByRatings"
							],
							"query": [
								{
									"key": "commentId",
									"value": "1"
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Execute Code",
			"item": [
				{
					"name": "Execute python code no stdin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"language\": \"python\",\n  \"code\": \"for i in range(5): print(i * i)\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/execution/executeCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"execution",
								"executeCode"
							]
						},
						"description": "execute python"
					},
					"response": []
				},
				{
					"name": "Python with 1 stdin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"language\": \"python\",\r\n  \"code\": \"name = input('Enter your name: ')\\nprint(f'Hello, {name}!')\",\r\n  \"stdinInput\": \"Suhani\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/execution/executeCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"execution",
								"executeCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Python with multiple stdins",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"language\": \"python\",\r\n  \"code\": \"num1 = int(input('Enter first number: '))\\nnum2 = int(input('Enter second number: '))\\nprint(f'Sum is: {num1 + num2}')\",\r\n  \"stdinInput\": \"5\\n10\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/execution/executeCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"execution",
								"executeCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Python with Error",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"language\": \"python\",\n  \"code\": \"num1 = int(input('Enter first number: '))\\nnum2 = input('Enter second number: ')\\nprint(f'Sum is: {num1 + num2}')\",\n  \"stdinInput\": \"5\\n10\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/execution/executeCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"execution",
								"executeCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Java without stdin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"language\": \"java\",\r\n  \"code\": \"public class Main { public static void main(String[] args) { System.out.println(\\\"Hello from Java\\\"); } }\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/execution/executeCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"execution",
								"executeCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Java with  1 stdin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"language\": \"java\",\r\n  \"code\": \"import java.util.Scanner;\\npublic class Main { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); String name = scanner.nextLine(); System.out.println(\\\"Hello, \\\" + name + \\\"!\\\"); } }\",\r\n  \"stdinInput\": \"Joyce\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/execution/executeCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"execution",
								"executeCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "java with multiple stdins",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"language\": \"java\",\r\n  \"code\": \"import java.util.Scanner;\\npublic class Main { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); int num1 = scanner.nextInt(); int num2 = scanner.nextInt(); System.out.println(\\\"Sum is: \\\" + (num1 + num2)); } }\",\r\n  \"stdinInput\": \"7\\n3\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/execution/executeCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"execution",
								"executeCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "java with Error",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"language\": \"java\",\r\n  \"code\": \"public class Main {\\n    public static void main(String[] args) {\\n        int[] numbers = {1, 2, 3};\\n        System.out.println(numbers[5]);  // This will cause an ArrayIndexOutOfBoundsException\\n    }\\n}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/execution/executeCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"execution",
								"executeCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "C code with no stdin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"language\": \"c\",\r\n  \"code\": \"#include <stdio.h>\\nint main() { printf(\\\"Hello from C\\\\n\\\"); return 0; }\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/execution/executeCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"execution",
								"executeCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "C with 1 stdin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"language\": \"c\",\r\n  \"code\": \"#include <stdio.h>\\nint main() { int num; scanf(\\\"%d\\\", &num); printf(\\\"Doubled value: %d\\\\n\\\", num * 2); return 0; }\",\r\n  \"stdinInput\": \"5\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/execution/executeCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"execution",
								"executeCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "C with mutliple stdins",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"language\": \"c\",\r\n  \"code\": \"#include <stdio.h>\\nint main() { int num1, num2; scanf(\\\"%d\\\", &num1); scanf(\\\"%d\\\", &num2); printf(\\\"Doubled values: %d %d\\\\n\\\", num1 * 2, num2 * 2); return 0; }\",\r\n  \"stdinInput\": \"3\\n7\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/execution/executeCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"execution",
								"executeCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "C with Error",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"language\": \"c\",\r\n  \"code\": \"#include <stdio.h>\\n\\nint main() {\\n    int *ptr = NULL;\\n    printf(\\\"%d\\\\n\\\", *ptr);  // Dereferencing a NULL pointer will cause a segmentation fault\\n    return 0;\\n}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/execution/executeCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"execution",
								"executeCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "C++  with no stdin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"code\": \"#include <iostream>\\nusing namespace std;\\n\\nint main() {\\n    cout << \\\"Hello, world!\\\" << endl;\\n    return 0;\\n}\",\r\n  \"language\": \"cpp\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/execution/executeCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"execution",
								"executeCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "C++ with 1 stdin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"language\": \"cpp\",\r\n  \"code\": \"#include <iostream>\\nusing namespace std;\\n\\nint main() {\\n    int num;\\n    cout << \\\"Enter a number:\\\" << endl;\\n    cin >> num;\\n    cout << \\\"Doubled value: \\\" << (num * 2) << endl;\\n    return 0;\\n}\",\r\n  \"stdinInput\": \"5\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/execution/executeCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"execution",
								"executeCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "C++ with multiple stdins",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"language\": \"cpp\",\r\n  \"code\": \"#include <iostream>\\nusing namespace std;\\n\\nint main() {\\n    int num1, num2;\\n    cout << \\\"Enter two numbers:\\\" << endl;\\n    cin >> num1 >> num2;\\n    cout << \\\"Doubled values: \\\" << (num1 * 2) << \\\" \\\" << (num2 * 2) << endl;\\n    return 0;\\n}\",\r\n  \"stdinInput\": \"3\\n4\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/execution/executeCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"execution",
								"executeCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "C++ with Error",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"#include <iostream>\\nusing namespace std;\\n\\nint main() {\\n    int* ptr = nullptr;\\n    cout << *ptr << endl;  // Dereferencing a nullptr will cause a runtime error (segmentation fault)\\n    return 0;\\n}\",\r\n  \"language\": \"cpp\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/execution/executeCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"execution",
								"executeCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "JavaScript with no stdin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"language\": \"javascript\",\r\n  \"code\": \"console.log(\\\"Hello from JavaScript\\\");\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/execution/executeCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"execution",
								"executeCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "JavaScript with 1 stdin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"language\": \"JavaScript\",\r\n  \"code\": \"const input = require('fs').readFileSync(0, 'utf-8');\\nconsole.log('Hello, ' + input.trim() + '!');\",\r\n  \"stdinInput\": \"Suhani\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/execution/executeCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"execution",
								"executeCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "JavaScript with multiple stdin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"language\": \"JavaScript\",\r\n  \"code\": \"const input = require('fs').readFileSync(0, 'utf-8');\\nconst names = input.trim().split(/[\\\\n,]+/);\\nnames.forEach(name => {\\n    console.log('Hello, ' + name.trim() + '!');\\n});\",\r\n  \"stdinInput\": \"Suhani, Joyce, Fermi\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/execution/executeCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"execution",
								"executeCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "JavaScript with Error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"language\": \"javascript\",\r\n  \"code\": \"const numbers = [1, 2, 3];\\nconsole.log(numbers[5].toString());  // Accessing .toString() on undefined will cause a TypeError\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/execution/executeCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"execution",
								"executeCode"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reports",
			"item": [
				{
					"name": "Create Report for blog",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bid\": 2,\n    \"explanation\": \"this blog post has inappropriate content.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/Reports/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"Reports",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Report for reply",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"replyId\": 1,\n    \"explanation\": \"this blog post has inappropriate content.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/Reports/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"Reports",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Report for Comments",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"commentId\": 2,\n    \"explanation\": \"this comment is not appropriate!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/Reports/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"Reports",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Report",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"explanation\": \"I have updated my report\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/Reports/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"Reports",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a report",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/Reports/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"Reports",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a report",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/Reports/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"Reports",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Reports (admin)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/Reports/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"Reports",
								""
							],
							"query": [
								{
									"key": "reportId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "uid",
									"value": "1",
									"disabled": true
								},
								{
									"key": "bid",
									"value": "1",
									"disabled": true
								},
								{
									"key": "commentId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}